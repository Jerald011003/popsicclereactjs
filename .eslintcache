[{"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\index.js":"1","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\store.js":"2","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reportWebVitals.js":"3","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\App.js":"4","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\productReducers.js":"5","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\cartReducers.js":"6","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\wishReducers.js":"7","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\playlistReducer.js":"8","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\preorderReducer.js":"9","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\chatboxReducer.js":"10","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\userReducers.js":"11","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\songReducer.js":"12","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Footer.js":"13","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\orderReducers.js":"14","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\HomeScreen.js":"15","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Header.js":"16","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\LoginScreen.js":"17","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\CartScreen.js":"18","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\RegisterScreen.js":"19","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PaymentScreen.js":"20","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PlaylistScreen.js":"21","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProfileScreen.js":"22","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PlaceOrderScreen.js":"23","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ShippingScreen.js":"25","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\OrderScreen.js":"26","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\UserListScreen.js":"27","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\UserEditScreen.js":"28","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProductEditScreen.js":"29","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\OrderListScreen.js":"30","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\SongListScreen.js":"31","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ChatBox.js":"32","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Playlist.js":"33","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Wishlist.js":"34","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ChatFriend.js":"35","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\WishHandler.js":"36","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\SongScreen.js":"37","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\test.js":"38","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PreorderScreen.js":"39","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Product.js":"40","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Message.js":"41","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Loader.js":"42","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\ProductCarousel.js":"43","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Paginate.js":"44","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\SearchBox.js":"45","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\FormContainer.js":"46","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Rating.js":"47","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Adbanner.js":"48","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\SongCarousel.js":"49","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\productConstants.js":"50","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\wishConstants.js":"51","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\preorderConstants.js":"52","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\cartConstants.js":"53","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\playlistConstants.js":"54","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\songConstants.js":"55","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\chatboxConstants.js":"56","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\userConstants.js":"57","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\orderConstants.js":"58","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\userActions.js":"59","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\productActions.js":"60","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\orderActions.js":"61","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\songActions.js":"62","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\playlistActions.js":"63","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\wishActions.js":"64","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\preorderActions.js":"65","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\chatboxActions.js":"66","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Song.js":"67","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\cartActions.js":"68","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\CheckoutSteps.js":"69"},{"size":628,"mtime":1680334882954,"results":"70","hashOfConfig":"71"},{"size":3708,"mtime":1680574406202,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":1616789579000,"results":"73","hashOfConfig":"71"},{"size":3549,"mtime":1680776923758,"results":"74","hashOfConfig":"71"},{"size":4080,"mtime":1680537176453,"results":"75","hashOfConfig":"71"},{"size":923,"mtime":1680413277746,"results":"76","hashOfConfig":"71"},{"size":1057,"mtime":1680249692754,"results":"77","hashOfConfig":"71"},{"size":2235,"mtime":1680576844596,"results":"78","hashOfConfig":"71"},{"size":1121,"mtime":1680536264613,"results":"79","hashOfConfig":"71"},{"size":368,"mtime":1680329787529,"results":"80","hashOfConfig":"71"},{"size":3926,"mtime":1616789579000,"results":"81","hashOfConfig":"71"},{"size":3905,"mtime":1680423437249,"results":"82","hashOfConfig":"71"},{"size":1572,"mtime":1680529600650,"results":"83","hashOfConfig":"71"},{"size":4079,"mtime":1616789579000,"results":"84","hashOfConfig":"71"},{"size":1617,"mtime":1680768643857,"results":"85","hashOfConfig":"71"},{"size":4702,"mtime":1680768664726,"results":"86","hashOfConfig":"71"},{"size":2549,"mtime":1616789579000,"results":"87","hashOfConfig":"71"},{"size":4708,"mtime":1680199660566,"results":"88","hashOfConfig":"71"},{"size":3922,"mtime":1616789579000,"results":"89","hashOfConfig":"71"},{"size":1705,"mtime":1616789579000,"results":"90","hashOfConfig":"71"},{"size":6840,"mtime":1680767345344,"results":"91","hashOfConfig":"71"},{"size":8278,"mtime":1680767205515,"results":"92","hashOfConfig":"71"},{"size":6052,"mtime":1680596146668,"results":"93","hashOfConfig":"71"},{"size":5007,"mtime":1616789579000,"results":"94","hashOfConfig":"71"},{"size":6124,"mtime":1680028691899,"results":"95","hashOfConfig":"71"},{"size":10156,"mtime":1680761070447,"results":"96","hashOfConfig":"71"},{"size":3511,"mtime":1616789579000,"results":"97","hashOfConfig":"71"},{"size":3912,"mtime":1616789579000,"results":"98","hashOfConfig":"71"},{"size":10873,"mtime":1680792058259,"results":"99","hashOfConfig":"71"},{"size":3541,"mtime":1616789579000,"results":"100","hashOfConfig":"71"},{"size":1830,"mtime":1680772273744,"results":"101","hashOfConfig":"71"},{"size":1642,"mtime":1680331651407,"results":"102","hashOfConfig":"71"},{"size":4621,"mtime":1680595100767,"results":"103","hashOfConfig":"71"},{"size":2167,"mtime":1680792069339,"results":"104","hashOfConfig":"71"},{"size":128,"mtime":1680100964189,"results":"105","hashOfConfig":"71"},{"size":13282,"mtime":1680361335721,"results":"106","hashOfConfig":"71"},{"size":15703,"mtime":1680771671300,"results":"107","hashOfConfig":"71"},{"size":110,"mtime":1680606887362,"results":"108","hashOfConfig":"71"},{"size":2647,"mtime":1680623696359,"results":"109","hashOfConfig":"71"},{"size":1284,"mtime":1680599364987,"results":"110","hashOfConfig":"71"},{"size":228,"mtime":1616789579000,"results":"111","hashOfConfig":"71"},{"size":458,"mtime":1616789579000,"results":"112","hashOfConfig":"71"},{"size":1419,"mtime":1680263360933,"results":"113","hashOfConfig":"71"},{"size":856,"mtime":1680776012990,"results":"114","hashOfConfig":"71"},{"size":1041,"mtime":1680595265196,"results":"115","hashOfConfig":"71"},{"size":378,"mtime":1616789579000,"results":"116","hashOfConfig":"71"},{"size":1886,"mtime":1616789579000,"results":"117","hashOfConfig":"71"},{"size":337,"mtime":1680608579248,"results":"118","hashOfConfig":"71"},{"size":1410,"mtime":1680533555843,"results":"119","hashOfConfig":"71"},{"size":1502,"mtime":1616789579000,"results":"120","hashOfConfig":"71"},{"size":100,"mtime":1680248704816,"results":"121","hashOfConfig":"71"},{"size":116,"mtime":1680536566567,"results":"122","hashOfConfig":"71"},{"size":287,"mtime":1616789579000,"results":"123","hashOfConfig":"71"},{"size":577,"mtime":1680575633714,"results":"124","hashOfConfig":"71"},{"size":1389,"mtime":1680423783130,"results":"125","hashOfConfig":"71"},{"size":41,"mtime":1680329816255,"results":"126","hashOfConfig":"71"},{"size":1479,"mtime":1616789579000,"results":"127","hashOfConfig":"71"},{"size":1416,"mtime":1680766548574,"results":"128","hashOfConfig":"71"},{"size":7622,"mtime":1680792025430,"results":"129","hashOfConfig":"71"},{"size":6186,"mtime":1680791998401,"results":"130","hashOfConfig":"71"},{"size":7267,"mtime":1680792032514,"results":"131","hashOfConfig":"71"},{"size":5824,"mtime":1680792012569,"results":"132","hashOfConfig":"71"},{"size":2877,"mtime":1680791986836,"results":"133","hashOfConfig":"71"},{"size":891,"mtime":1680792029535,"results":"134","hashOfConfig":"71"},{"size":1043,"mtime":1680791991232,"results":"135","hashOfConfig":"71"},{"size":291,"mtime":1680329816254,"results":"136","hashOfConfig":"71"},{"size":1710,"mtime":1680429355068,"results":"137","hashOfConfig":"71"},{"size":1368,"mtime":1680792032515,"results":"138","hashOfConfig":"71"},{"size":1593,"mtime":1680595839243,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1scehp6",{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"142"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"142"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"142"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"262","usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"142"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\index.js",[],["304","305"],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\store.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reportWebVitals.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\App.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\productReducers.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\cartReducers.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\wishReducers.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\playlistReducer.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\preorderReducer.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\chatboxReducer.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\userReducers.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\songReducer.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Footer.js",["306","307","308"],"import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"bg-dark text-white\">\n      <Container className=\"py-2\">\n        <Row>\n          <Col md={4} className=\"text-center\">\n            <h5>Connect With Us</h5>\n            <div className=\"d-flex justify-content-center\">\n              <a href=\"#\" className=\"me-3 text-white\">\n                <i className=\"fab fa-facebook fa-lg\"></i>\n              </a>\n              <a href=\"#\" className=\"me-3 text-white\">\n                <i className=\"fab fa-twitter fa-lg\"></i>\n              </a>\n              <a href=\"#\" className=\"text-white\">\n                <i className=\"fab fa-instagram fa-lg\"></i>\n              </a>\n            </div>\n          </Col>\n          <Col md={4} className=\"text-center\">\n            <h5>About Us</h5>\n            <p className=\"mb-0\">\n              Popsiccle showcases music of all genres with features like download, create playlist, heart a song. etc.\n            </p>\n          </Col>\n          <Col md={4} className=\"text-center\">\n            <h5>Contact Us</h5>\n            <p className=\"mb-0\">\n              Email: Popsiccle@gmail.com <br />\n              Phone: 1234567890\n          \n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center\">\n            <p className=\"mb-0\">\n              &copy; {new Date().getFullYear()} POPSICCLE All rights reserved.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\reducers\\orderReducers.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\HomeScreen.js",["309","310"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport '../styles/Header.css'\n\nfunction HomeScreen({ history}) {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { error, loading, products, page, pages } = productList\n\n  let keyword = ''\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch, keyword])\n\n  return (\n    <div className=\"home-screen-container text-center\">\n      {/* {!keyword && <ProductCarousel />} */}\n      <h1>Choose your plan\n        \n      </h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=\"home-screen-product-list-container text-center\">\n          <Row className=\"home-screen-product-list justify-content-center\">\n            {products.map(product => (\n              <Col key={product._id} sm={15} md={10} lg={4} xl={3} className=\"home-screen-product-col\">\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} className=\"home-screen-pagination\" />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default HomeScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Header.js",["311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\nimport { FaHome, FaGamepad, FaShoppingCart, FaUser, FaHeart } from 'react-icons/fa';\nimport { GiSwordsEmblem } from 'react-icons/gi';\nimport { SiTwitch } from 'react-icons/si';\nimport Avatar from '../assets/POPSICCLE.png';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FaFileInvoice } from 'react-icons/fa';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { FaComments } from 'react-icons/fa';\nimport { Helmet } from \"react-helmet\";\n\nfunction Header({ match, history}) {\n  \n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n       <Helmet>\n        <title>POPSICCLE</title>\n        <link rel=\"icon\" type=\"image/png\" href=\"https://imgur.com/XDaKYpK.png\" sizes=\"16x16\" />\n      </Helmet>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ height: '125px' }}>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n\n              {/* <h1>Popsiccle</h1> */}\n              <img src={Avatar} className=\"d-inline-block align-top\" alt=\"WASD Logo\" style={{ width: '250px', height: '50px' }} />{' '}\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n          \n            <Nav className=\"me-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>\n                  <FaHome className=\"me-2\" />\n                  Listen Music\n                </Nav.Link>\n              </LinkContainer>\n\n\n  <LinkContainer to=\"/plan\">\n  <Nav.Link>\n\n      <FaFileInvoice className=\"me-2\" />\n      Plan\n      </Nav.Link>\n\n  </LinkContainer>           \n\n\n\n\n<NavDropdown title={<span><FaFileInvoice className=\"me-2\" />Library</span>}> \n  <LinkContainer to=\"/liked\">\n    <NavDropdown.Item>\n    <FontAwesomeIcon icon={faHeart} className=\"me-2\" />      Liked Songs\n    </NavDropdown.Item>\n  </LinkContainer>           \n\n\n  <LinkContainer to=\"/playlistsongs\">\n \n  <NavDropdown.Item>\n    <FaFileInvoice className=\"me-2\" />\n    Playlist\n  </NavDropdown.Item>\n</LinkContainer>\n\n  {/* <LinkContainer to=\"/downloadsong\">\n \n  <NavDropdown.Item>\n    <FaFileInvoice className=\"me-2\" />\n    Download Songs\n  </NavDropdown.Item>\n</LinkContainer> */}\n\n</NavDropdown>\n\n\n\n        \n              {/* <SearchBox /> */}\n              \n            </Nav>\n\n\n            <Nav>\n\n      \n      {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>\n                      <FaUser className=\"me-2\" />\n                      Profile\n                    </NavDropdown.Item>\n                  </LinkContainer>\n      \n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <FaUser className=\"me-2\" />\n                    Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              \n{userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\LoginScreen.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\CartScreen.js",["323"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Purchases</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        \n\n                                        <Col md={3}>\n                                            {/* <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control> */}\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Total Cost</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\RegisterScreen.js",["324"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PaymentScreen.js",["325"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PlaylistScreen.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ListGroupItem } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\nimport axios from 'axios';\nimport { listMyOrders } from '../actions/orderActions';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nimport { Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [wishlist, setWishlist] = useState([]);\n  const [bought, setBought] = useState(false);\n  const [owned, setOwned] = useState(false);\n  const [boughtQty, setBoughtQty] = useState(1); // new state variable to track the number of products the user has already bought\n\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order} = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  \n\n  useEffect(() => {\n    dispatch({ type: ORDER_LIST_MY_RESET }); // reset the orders state when the component mounts\n    dispatch(listMyOrders(order)); // call the API to get the user's orders\n  }, [dispatch]);\n  \n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  \n  \n  // const dispatch = useDispatch()\n\n  \n\n\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n  \n  const deleteOrderHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch({ type: ORDER_DELETE_REQUEST });\n\n      dispatch(deleteOrder(id)).then((res) => {\n        if (res.type === ORDER_DELETE_SUCCESS) {\n          dispatch(listMyOrders());\n        } else if (res.type === ORDER_DELETE_FAIL) {\n          console.log(res.payload);\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/plan\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n          \n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n      \n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                   \n\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                  \n                                            <ListGroup.Item className=\"d-flex justify-content-center\">\n\n  <Col md={9} className=\"text-center\">\n  <h5 className=\"d-flex justify-content-center\">Plan Status:</h5>\n  {loadingOrders ? (\n    <Loader />\n  ) : errorOrders ? (\n    <Message variant='danger'>{errorOrders}</Message>\n  ) : (\n    <h1 className=\"text-center\">\n      {orders.map(order => (\n        <div key={order._id}>\n          <h2>\n            {order.isBought ? (\n              <i className='fas fa-check d-flex justify-content-center' style={{ color: 'green' }}></i>\n            ) : (\n              <i className='fas fa-times d-flex justify-content-center' style={{ color: 'red' }}></i>\n            )}\n          </h2>\n\n          <h4\n            // onClick={() => addToCartHandler(order)}\n            className=\"btn-block text-center\"\n            // type=\"button\"\n            disabled={order.isBought ? true : false} // set the disabled property based on order.isBought\n          >\n            You are already in plan\n          </h4>\n\n          <Button\n          className='btn-sm'\n          onClick={() => deleteOrderHandler(order._id)}\n        >\n          Cancel\n        </Button>\n        </div>\n      ))}\n    </h1>\n  )}\n</Col>\n\n</ListGroup.Item>\n<ListGroup.Item>\n\n<Button\n  onClick={() => addToCartHandler(order)}\n  className=\"btn-block text-center\"\n  type=\"button\"\n  disabled={orders && orders.some((order) => order.isBought)}\n>\n  Buy\n</Button>\n\n\n\n</ListGroup.Item>\n\n\n\n              </ListGroup>\n            </Card>\n        </Col>\n\n        </Row>\n  <Row>\n   \n  </Row>\n</div>\n)}\n</div>\n);\n}\nexport default ProductScreen;","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProfileScreen.js",["363","364"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n    const deleteOrderHandler = (id) => {\n        if (window.confirm('Are you sure?')) {\n          dispatch({ type: ORDER_DELETE_REQUEST });\n    \n          dispatch(deleteOrder(id)).then((res) => {\n            if (res.type === ORDER_DELETE_SUCCESS) {\n              dispatch(listMyOrders());\n            } else if (res.type === ORDER_DELETE_FAIL) {\n              console.log(res.payload);\n            }\n          });\n        }\n      };\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Purchased Plans</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        {/* <th>ID</th> */}\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th>IsBasic</th>\n                                        <th>IsPremium</th>\n                                    \n                                        <th>IsBought</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                        {/* <td>{order._id}</td> */}\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                        <td>\n                                          <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm'>Details</Button>\n                                          </LinkContainer>\n                                        </td>\n                                        <td>{order.isBasic ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                        <td>{order.isPremium ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                        <td>{order.isBought ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                        <td>\n        <Button\n          className='btn-sm'\n          onClick={() => deleteOrderHandler(order._id)}\n        >\n          Cancel Plan\n        </Button>\n      </td>\n                                      </tr>\n                                      \n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PlaceOrderScreen.js",["365","366"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: [cart.cartItems[0]], // Only pass the first item in the array\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Contact</h2>\n\n                            <p>\n                                <strong>Details: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Purchase Plan</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                            its empty, go purchase\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={cart.cartItems[0].image} alt={cart.cartItems[0].name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${cart.cartItems[0].product}`}>{cart.cartItems[0].name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {/* {cart.cartItems[0].qty} X ${cart.cartItems[0].price} = ${(cart.cartItems[0].qty * cart.cartItems[0].price).toFixed(2)} */}\n</Col>\n</Row>\n</ListGroup.Item>\n</ListGroup>\n)}\n</ListGroup.Item>\n</ListGroup>\n</Col>\n\n<Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Purchase Summary</h2>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Items:</Col>\n                                <Col>${cart.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {/* <ListGroup.Item>\n                            <Row>\n                                <Col>Shipping:</Col>\n                                <Col>${cart.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item> */}\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax:</Col>\n                                <Col>${cart.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total:</Col>\n                                <Col>${cart.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            {error && <Message variant='danger'>{error}</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cart.cartItems.length === 0}\n                                onClick={placeOrder}\n                            >\n                                Place Order\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n)\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProductListScreen.js",["367"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ShippingScreen.js",["368","369"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    const countries = [\n        'Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Australia',\n        'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin',\n        'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi',\n        'Cabo Verde', 'Cambodia', 'Cameroon', 'Canada', 'Central African Republic', 'Chad', 'Chile', 'China', 'Colombia',\n        'Comoros', 'Congo, Democratic Republic of the', 'Congo, Republic of the', 'Costa Rica', 'Cote d\\'Ivoire', 'Croatia',\n        'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt',\n        'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Eswatini (formerly Swaziland)', 'Ethiopia', 'Fiji',\n        'Finland', 'France', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Greece', 'Grenada', 'Guatemala', 'Guinea',\n        'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland',\n        'Israel', 'Italy', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Kosovo', 'Kuwait', 'Kyrgyzstan',\n        'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Madagascar',\n        'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Mauritania', 'Mauritius', 'Mexico', 'Micronesia',\n        'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Morocco', 'Mozambique', 'Myanmar (formerly Burma)', 'Namibia', 'Nauru',\n        'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'North Korea', 'North Macedonia (formerly Macedonia)',\n'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines',\n'Poland', 'Portugal', 'Qatar', 'Romania', 'Russia', 'Rwanda', 'Saint Kitts and Nevis', 'Saint Lucia',\n'Saint Vincent and the Grenadines', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal',\n'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia',\n'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Sweden', 'Switzerland',\n'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste (formerly East Timor)', 'Togo', 'Tonga',\n'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates',\n'United Kingdom', 'United States of America', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City (Holy See)',\n'Venezuela', 'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'\n];\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Contact Information</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter phone'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                    required\n                    as='select'\n                    value={country ? country : ''}\n                    onChange={(e) => setCountry(e.target.value)}\n                >\n                    <option value=''>Select country</option>\n                    {countries.map((country, index) => (\n                        <option key={index} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </Form.Control>\n                </Form.Group>\n                <h1></h1>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\OrderScreen.js",["370","371","372","373","374"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AdBpHPdb251WJxSmZV3FxvQDXQZN01hrF0albnLIrH5JmIQlCv5eWa46flZdI2pdpLOF22LKgxBE3FSy'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n      \n    const download = () => {\n        window.location.href = order.download;\n      };\n      \n      \n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Contact</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Contant Info: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {/* {order.isDelivered ? (\n                                                <Message variant='success'>Emailed on {order.deliveredAt}</Message>\n                                                ) : (\n                                                <div>\n                                                    <Button onClick={sendConfirmationEmail}>Email Me</Button>\n                                                    {order.isSendingEmail && <Message variant='info'>Sending email...</Message>}\n                                                    {order.emailError && <Message variant='danger'>{order.emailError}</Message>}\n                                                </div>\n                                                )} */}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                        \n                                        \n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                            \n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Purchase Plan</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        its empty, go purchase\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            {/* <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col> */}\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Purchase Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {/* <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item> */}\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                          \n\n\n               \n{order.isPaid && order.paymentMethod === 'PayPal' && (\n//   <Button onClick={download}>Download</Button>\n<h5 className='text-center'><br/>Enjoy! <br/><br/>You can now use your chosen plan.<br/><br/></h5>\n)}\n\n\n\n\n            \n         \n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\UserListScreen.js",["375"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\UserEditScreen.js",["376"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\OrderListScreen.js",["377"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\SongListScreen.js",["378"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Song from '../components/Song';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listSongs } from '../actions/songActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport SongCarousel from '../components/SongCarousel';\r\nimport SearchBox from '../components/SearchBox'; // import SearchBox component\r\nimport '../styles/Header.css';\r\n\r\nfunction SongListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const songList = useSelector(state => state.songList);\r\n  const { error, loading, songs, page, pages } = songList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listSongs(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/songlist${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/songlist/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBox submitHandler={submitHandler} />\r\n      <br/>\r\n      {!keyword && <SongCarousel />}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {songs.map((song) => (\r\n              <Col key={song._id} sm={12} md={6} lg={5} xl={3}>\r\n                <Song song={song} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            page={page}\r\n            pages={pages}\r\n            keyword={keyword}\r\n            className=\"home-screen-pagination\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongListScreen;\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ChatBox.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Playlist.js",["379","380","381","382","383","384","385","386","387"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPlaylist, deletePlaylist, listPlaylists } from '../actions/playlistActions';\r\nimport './Playlist.css'\r\nimport { listSongDetails } from '../actions/songActions';\r\nimport { addToPreorder, removeFromPreorder } from '../actions/preorderActions';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nconst Playlist = ({ match, location, history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [link, setLink] = useState('');\r\n  // const [qty, setQty] = useState(1);\r\n  const [createDisabled, setCreateDisabled] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, error, playlists } = useSelector((state) => state.playlistList);\r\n\r\n  useEffect(() => {\r\n    dispatch(listPlaylists());\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const existingPlaylist = playlists.find((p) => p.title === title);\r\n    if (existingPlaylist) {\r\n      alert('You can only create one playlist!');\r\n      return;\r\n    }\r\n    dispatch(createPlaylist({ title, image, link }));\r\n    setTitle('');\r\n    setImage(null);\r\n    setLink('');\r\n    setCreateDisabled(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deletePlaylist(id)).then(() => {\r\n      dispatch(listPlaylists());\r\n    });\r\n  };\r\n\r\n  // const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  const songId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n  // const dispatch = useDispatch();\r\n\r\n  const preorder = useSelector(state => state.preorder);\r\n  const { preorderItems } = preorder;\r\n\r\n  useEffect(() => {\r\n    if (songId) {\r\n      dispatch(addToPreorder(songId, qty));\r\n    }\r\n  }, [dispatch, songId, qty]);\r\n\r\n  const removeFromPreorderHandler = (id) => {\r\n    dispatch(removeFromPreorder(id));\r\n  };\r\n\r\n  const songDetails = useSelector(state => state.songDetails);\r\n  const { song } = songDetails;\r\n\r\n  return (\r\n    <div className=\"playlist\">\r\n     <h1 className=\"playlist__title\">Create Playlist</h1>\r\n    <form className=\"playlist__form\" onSubmit={handleSubmit}>\r\n      <div className=\"playlist__form-group\">\r\n        <label className=\"playlist__label\" htmlFor='title'>Title</label>\r\n        <input\r\n          className=\"playlist__input\"\r\n          type='text'\r\n          id='title'\r\n          placeholder='Enter playlist title'\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"playlist__form-group\">\r\n        <label className=\"playlist__label\" htmlFor='image'>Image</label>\r\n        <input\r\n          className=\"playlist__input\"\r\n          type='file'\r\n          id='image'\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"playlist__form-group\">\r\n        <p>Note: You can only create one playlist!</p>\r\n      </div>\r\n      <button className=\"playlist__button\" type='submit' disabled={createDisabled}>Create Playlist</button>\r\n      </form>\r\n      {loading ? (\r\n      <div className=\"playlist__message\">Loading...</div>\r\n    ) : error ? (\r\n      <div className=\"playlist__message\">{error}</div>\r\n    ) : (\r\n      <div>\r\n        <h2 className=\"playlist__title\">Playlist List</h2>\r\n        <ul className=\"playlist__list\">\r\n          {playlists.map((playlist) => (\r\n            <li className=\"playlist__item\" key={playlist.id}>\r\n              <div>{playlist.title}</div>\r\n              {playlist.songs && (\r\n                <ul className=\"playlist__song-list\">\r\n                  {playlist.songs.map((song) => (\r\n                    <li className=\"playlist__song-item\" key={song.id}>\r\n                      {song.title} by {song.artist}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n              {playlist.image && (\r\n                              <LinkContainer to=\"/playlist\">\r\n            <Navbar.Brand>\r\n\r\n              \r\n                  <img className=\"playlist__image\" src={playlist.image} alt={playlist.title} />\r\n              \r\n         </Navbar.Brand>\r\n           </LinkContainer>\r\n              )}\r\n              <button className=\"playlist__button\" onClick={() => handleDelete(playlist.id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Wishlist.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\ChatFriend.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\WishHandler.js",["388","389","390","391","392","393"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\r\n// import Wishhandler from './Wishhandler';\r\n// import { addToWishlist } from '../actions/wishActions';\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n//   const [wishlist, setWishlist] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n//   useEffect(() => {\r\n//     if (successProductReview) {\r\n//       setRating(0);\r\n//       setComment('');\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n//     }\r\n\r\n//     dispatch(listProductDetails(match.params.id));\r\n//   }, [dispatch, match, successProductReview]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/wishlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ))\r\n}\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        {/* <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col> */}\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    // onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Buy\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                            <div class=\"text-center\">\r\n    {/* <Link onClick={wishlistHandler} className='btn btn-light my-3' type='button' disabled={product.countInStock == 0}> */}\r\n        {/* <FontAwesomeIcon icon={farHeart} /> Wishlist */}\r\n\r\n\r\n      <ListGroup.Item>\r\n  {/* <Link to={`/wishlist/${match.params.id}?qty=${qty}`}> */}\r\n    <Button onClick={() => addToWishlist()} className='btn btn-light my-3' type='button' icon={farHeart}>\r\n      Wishlist\r\n    </Button>\r\n  {/* </Link> */}\r\n</ListGroup.Item>\r\n\r\n\r\n{/* <Wishhandler /> */}\r\n\r\n    {/* </Link> */}\r\n</div>\r\n                           {/* <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={checkoutHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Buy\r\n                                                </Button>\r\n                                            </ListGroup.Item> */}\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\SongScreen.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listSongDetails } from '../actions/songActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { createPlaylist, deletePlaylist, listPlaylists } from '../actions/playlistActions';\r\nimport { useRef } from 'react';\r\n\r\nimport AdBanner from './Adbanner';\r\n\r\nfunction SongScreen({ match, history}) {\r\n  const { playlists } = useSelector((state) => state.playlistList);\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const songDetails = useSelector(state => state.songDetails);\r\n  const {  song, error, loading} = songDetails;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listSongDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cartsong/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/liked/${match.params.id}?qty=${qty}`);\r\n    setLiked(true); // Update the state to indicate that the user has liked the song\r\n\r\n  };\r\n\r\n  const addToPreorder = () => {\r\n    history.push(`/playlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n  const [isHovered1, setIsHovered1] = useState(false);\r\n  const [isHovered2, setIsHovered2] = useState(false);\r\n  const [isHovered3, setIsHovered3] = useState(false);\r\n  const [isHovered4, setIsHovered4] = useState(false);\r\n  const [isHovered5, setIsHovered5] = useState(false);\r\n\r\n  const handleMouseEnter1 = () => setIsHovered1(true);\r\n  const handleMouseLeave1 = () => setIsHovered1(false);\r\n  const handleMouseEnter2 = () => setIsHovered2(true);\r\n  const handleMouseLeave2 = () => setIsHovered2(false);\r\n  const handleMouseEnter3 = () => setIsHovered3(true);\r\n  const handleMouseLeave3 = () => setIsHovered3(false);\r\n  const handleMouseEnter4 = () => setIsHovered4(true);\r\n  const handleMouseLeave4 = () => setIsHovered4(false);\r\n  const handleMouseEnter5 = () => setIsHovered5(true);\r\n  const handleMouseLeave5 = () => setIsHovered5(false);\r\n\r\n  const adIntervalRef = useRef(null);\r\n  const audioElement1Ref = useRef(null);\r\n  const audioElement2Ref = useRef(null);\r\n  const audioElement3Ref = useRef(null);\r\n  const audioElement4Ref = useRef(null);\r\n  const audioElement5Ref = useRef(null);\r\n  const audioElement6Ref = useRef(null);\r\n  const audioElement7Ref = useRef(null);\r\n  const audioElement8Ref = useRef(null);\r\n  const audioElement9Ref = useRef(null);\r\n  const audioElement10Ref = useRef(null);\r\n\r\n  const [currentAudio, setCurrentAudio] = useState(null);\r\n  let audioElement1, audioElement2;\r\n  \r\n  const handlePlayClick = (playElement, pauseElement) => {\r\n    playElement.play();\r\n    if (!playElement.paused) {\r\n      pauseElement.pause();\r\n    }\r\n    // Start showing the AdBanner every minute\r\n    adIntervalRef.current = setInterval(() => {\r\n      console.log('Showing AdBanner');\r\n    }, 20);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clean up the interval on unmount\r\n      clearInterval(adIntervalRef.current);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const [showPremium, setShowPremium] = useState(false);\r\n  // const [showBasic, setShowBasic] = useState(true);\r\n\r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const [showDownload, setShowDownload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    const handleDropdownToggle = () => {\r\n      setShowDropdown(!showDropdown);\r\n    };\r\n\r\n    \r\n    // const { title } = playlists;\r\n\r\n    const addToPlaylist = (playlistId, playlistTitle) => {\r\n      history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n    };\r\n    const download = () => {\r\n      window.location.href = song.download;\r\n    };\r\n  \r\n  return (\r\n    <div>\r\n       \r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n     ) : error ? ( \r\n        <Message variant=\"danger\">{error}</Message>\r\n     ) : ( \r\n        <div>\r\n          <Row>\r\n          <Col sm={12} md={6} lg={4} xl={3} className=\"home-screen-product-col\">\r\n      <Image src={song.image} alt={song.name} fluid />\r\n      <br />\r\n      <br />\r\n      <Card>\r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n            <Row onMouseEnter={handleMouseEnter1} onMouseLeave={handleMouseLeave1}>\r\n              <h4 type=\"button\">{song.title}</h4>\r\n              {song.music && (\r\n                <div>\r\n                  <audio\r\n                    controls\r\n                    className=\"music-player\"\r\n                    style={{ display: isHovered1 ? \"block\" : \"none\" }}\r\n                    onClick={() =>\r\n                      handlePlayClick(audioElement1Ref.current, audioElement2Ref.current)\r\n                    }\r\n                  >\r\n                    <source src={song.music} type=\"audio/mpeg\" />\r\n                    Your browser does not support the audio element.\r\n                  </audio>\r\n                  <div className=\"ad-banner\" style={{ display: 'none' }}>\r\n                    <AdBanner />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Row>\r\n            <audio ref={audioElement1Ref} />\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Row onMouseEnter={handleMouseEnter2} onMouseLeave={handleMouseLeave2}>\r\n              <h4 type=\"button\">{song.title2}</h4>\r\n              {song.music2 && (\r\n                <div>\r\n                  <audio\r\n                    controls\r\n                    className=\"music-player\"\r\n                    style={{ display: isHovered2 ? \"block\" : \"none\" }}\r\n                    onClick={() =>\r\n                      handlePlayClick(audioElement2Ref.current, audioElement1Ref.current)\r\n                    }\r\n                  >\r\n                    <source src={song.music2} type=\"audio/mpeg\" />\r\n                    Your browser does not support the audio element.\r\n                  </audio>\r\n                  <div className=\"ad-banner\" style={{ display : 'none' }}>\r\n<AdBanner />\r\n</div>\r\n</div>\r\n)}\r\n</Row>\r\n<audio ref={audioElement2Ref} />\r\n</ListGroup.Item>\r\n\r\n<ListGroup.Item>\r\n            <Row onMouseEnter={handleMouseEnter3} onMouseLeave={handleMouseLeave3}>\r\n              <h4 type=\"button\">{song.title3}</h4>\r\n              {song.music3 && (\r\n                <div>\r\n                  <audio\r\n                    controls\r\n                    className=\"music-player\"\r\n                    style={{ display: isHovered3 ? \"block\" : \"none\" }}\r\n                    onClick={() =>\r\n                      handlePlayClick(audioElement3Ref.current, audioElement2Ref.current)\r\n                    }\r\n                  >\r\n                    <source src={song.music3} type=\"audio/mpeg\" />\r\n                    Your browser does not support the audio element.\r\n                  </audio>\r\n                  <div className=\"ad-banner\" style={{ display : 'none' }}>\r\n<AdBanner />\r\n</div>\r\n</div>\r\n)}\r\n</Row>\r\n<audio ref={audioElement3Ref} />\r\n</ListGroup.Item>\r\n\r\n\r\n<ListGroup.Item>\r\n            <Row onMouseEnter={handleMouseEnter4} onMouseLeave={handleMouseLeave4}>\r\n              <h4 type=\"button\">{song.title4}</h4>\r\n              {song.music4 && (\r\n                <div>\r\n                  <audio\r\n                    controls\r\n                    className=\"music-player\"\r\n                    style={{ display: isHovered4 ? \"block\" : \"none\" }}\r\n                    onClick={() =>\r\n                      handlePlayClick(audioElement4Ref.current, audioElement3Ref.current)\r\n                    }\r\n                  >\r\n                    <source src={song.music4} type=\"audio/mpeg\" />\r\n                    Your browser does not support the audio element.\r\n                  </audio>\r\n                  <div className=\"ad-banner\" style={{ display : 'none' }}>\r\n<AdBanner />\r\n</div>\r\n</div>\r\n)}\r\n</Row>\r\n<audio ref={audioElement4Ref} />\r\n</ListGroup.Item>\r\n\r\n<ListGroup.Item>\r\n            <Row onMouseEnter={handleMouseEnter5} onMouseLeave={handleMouseLeave5}>\r\n              <h4 type=\"button\" >{song.title5}</h4>\r\n              {song.music5 && (\r\n                <div>\r\n                  <audio\r\n                    controls\r\n                    className=\"music-player\"\r\n                    style={{ display: isHovered5 ? \"block\" : \"none\" }}\r\n                    onClick={() =>\r\n                      handlePlayClick(audioElement5Ref.current, audioElement4Ref.current)\r\n                    }\r\n                  >\r\n                    <source src={song.music5} type=\"audio/mpeg\" />\r\n                    Your browser does not support the audio element.\r\n                  </audio>\r\n                  <div className=\"ad-banner\" style={{ display : 'none' }}>\r\n<AdBanner />\r\n</div>\r\n</div>\r\n)}\r\n</Row>\r\n<audio ref={audioElement5Ref} />\r\n</ListGroup.Item>\r\n\r\n\r\n</ListGroup>\r\n</Card>\r\n</Col>\r\n\r\n     \r\n            <Col md={5}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h1>{song.name}</h1>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {song.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              {/* <Card> */}\r\n                <ListGroup >\r\n\r\n\r\n                  {/* {song.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )} */}\r\n\r\n                  {/* <ListGroup.Item> */}\r\n                  \r\n         \r\n         {loadingOrders ? (\r\n  <Loader /> \r\n) : errorOrders ? ( \r\n  <Message variant='danger'>{errorOrders}</Message> \r\n) : ( \r\n  orders.map(order => (\r\n\r\n    \r\n    <div key={order.id}>\r\n      <h1>\r\n        {order.isBasic && !showPremium && (\r\n\r\n<ListGroup.Item>\r\n<div className=\"text-center\">\r\n<Button\r\n                  onClick={addToWishlist}\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={song.countInStock === 0 || liked} // Disable the button if the song is out of stock or if the user has already liked it\r\n                ><FontAwesomeIcon icon={faHeart} className=\"me-2\" />\r\n                {liked ? \"Liked\" : \"Like\"} {/* Change the button text based on the state */}</Button>\r\n</div>\r\n          </ListGroup.Item>\r\n        )}\r\n      </h1>\r\n\r\n      <h2>\r\n        {order.isPremium && (\r\n          <div>\r\n\r\n<ListGroup.Item>\r\n<div className=\"text-center\">\r\n              <Button\r\n                  onClick={addToWishlist}\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={song.countInStock === 0 || liked} // Disable the button if the song is out of stock or if the user has already liked it\r\n                ><FontAwesomeIcon icon={faHeart} className=\"me-2\" />\r\n                {liked ? \"Liked\" : \"Like\"} {/* Change the button text based on the state */}</Button>\r\n                </div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <div className=\"text-center\">\r\n                <Button onClick={download}>Download</Button>\r\n</div>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                <div className=\"text-center\">\r\n                <Dropdown show={showDropdown} onMouseEnter={handleDropdownToggle} onMouseLeave={handleDropdownToggle}>\r\n                  <Dropdown.Toggle className=\"playlist__dropdown-toggle\" variant=\"success\" id=\"dropdown-basic\">\r\n                    Add to Playlist\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n  {playlists.map((p) => {\r\n    const playlistTitle = p.title;\r\n    return (\r\n      <Dropdown.Item key={p.id} onClick={() => addToPlaylist(p.id, playlistTitle)}>\r\n        {playlistTitle}\r\n      </Dropdown.Item>\r\n    );\r\n  })}\r\n</Dropdown.Menu>\r\n                </Dropdown>\r\n</div>\r\n            </ListGroup.Item>\r\n            \r\n\r\n          </div>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  ))\r\n\r\n  \r\n)}\r\n\r\n        \r\n\r\n\r\n                      {/* </ListGroup.Item> */}\r\n                      {/* {userInfo ? (\r\n            <h1></h1>\r\n              ) : (\r\n                <ListGroup.Item>\r\n                  <Link to=\"/login\">\r\n                    <Message variant=\"info\">\r\n                      Please subscribe to like songs\r\n                    </Message>\r\n                  </Link>\r\n                </ListGroup.Item>\r\n              )} */}\r\n         <div className=\"text-center\">\r\n              {/* <ListGroup.Item>\r\n                <Button\r\n                  onClick={addToPreorder}\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={song.countInStock === 0}\r\n                >\r\n                  Add to Playlist\r\n                </Button>\r\n              </ListGroup.Item> */}\r\n\r\n            <div>\r\n             {/* <Dropdown show={showDropdown} onMouseEnter={handleDropdownToggle} onMouseLeave={handleDropdownToggle}>\r\n                  <Dropdown.Toggle className=\"playlist__dropdown-toggle\" variant=\"success\" id=\"dropdown-basic\">\r\n                    Add to Playlist\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n  {playlists.map((p) => {\r\n    const playlistTitle = p.title;\r\n    return (\r\n      <Dropdown.Item key={p.id} onClick={() => addToPlaylist(p.id, playlistTitle)}>\r\n        {playlistTitle}\r\n      </Dropdown.Item>\r\n    );\r\n  })}\r\n</Dropdown.Menu>\r\n                </Dropdown> */}\r\n                </div>\r\n              </div>\r\n            </ListGroup>\r\n          {/* </Card> */}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n   )} \r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default SongScreen;\r\n\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\test.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\PreorderScreen.js",["428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToPreorder, removeFromPreorder } from '../actions/preorderActions';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listSongDetails, createSongReview } from '../actions/songActions';\r\nimport { SONG_CREATE_REVIEW_RESET } from '../constants/songConstants';\r\n\r\nconst PlaylistScreen = ({ match, location, history }) => {\r\n  const songId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n  const dispatch = useDispatch();\r\n\r\n  const preorder = useSelector(state => state.preorder);\r\n  const { preorderItems } = preorder;\r\n\r\n  useEffect(() => {\r\n    if (songId) {\r\n      dispatch(addToPreorder(songId, qty));\r\n    }\r\n  }, [dispatch, songId, qty]);\r\n\r\n  const removeFromPreorderHandler = (id) => {\r\n    dispatch(removeFromPreorder(id));\r\n  };\r\n\r\n  const songDetails = useSelector(state => state.songDetails);\r\n  const { loading, error, song } = songDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Playlist</h1>\r\n      {preorderItems.length === 0 ? (\r\n        <div className=\"text-center\">\r\n          <p>Your playlist is empty</p>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Go Listen\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <Row>\r\n          {preorderItems.map((item) => (\r\n            <Col key={item.song} xs={12} md={6} lg={4} className=\"mb-5\">\r\n              <div className=\"p-3 border rounded\">\r\n                <Image src={item.image} alt={item.name} fluid />\r\n                <div className=\"mt-3\">\r\n                  <Link to={`/song/${item.song}`} className=\"fw-bold\">\r\n                    {item.name}\r\n                  </Link>\r\n                </div>\r\n                <h2></h2>\r\n                {/* <div className=\"mb-3\">${item.price}</div> */}\r\n                {/* <div className=\"mb-3\">Date of Available: {item.preorderdate}</div> */}\r\n               \r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => removeFromPreorderHandler(item.song)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlaylistScreen\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Product.js",["443"],"import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\nimport './Product.css'\nfunction Product({ product, plan }) {\n  return (\n    <div className=\"text-center\">\n    <Card className=\"my-3 p-3 rounded bg-light text-black \">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n\n      <Card.Body >\n      <Link style={{ color: 'black', textDecoration: 'none' }} to={`/product/${product._id}`}>\n  <Card.Title as=\"h3\">\n    <strong>{product.name}</strong>\n  </Card.Title>\n</Link>\n\n\n        {/* <Card.Text as=\"div\">\n          <div className=\"my-3\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n              color={'#f8e825'}\n            />\n          </div>\n        </Card.Text> */}\n\n        <Card.Text as=\"h3\" className=\"mb-3\">\n          ${product.price}\n        </Card.Text>\n        \n{/* \n        <Card.Text as=\"h5\" className=\"mb-3\">\n  {product.countInStock === 0 ? \"Out of Stock\" : `Available`}\n</Card.Text> */}\n\n\n<Link to={`/product/${product._id}`} className=\"btn btn-secondary\">\n  View Details\n</Link>\n\n      </Card.Body>\n    </Card>\n    </div>\n  );\n}\n\nexport default Product;\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Message.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Loader.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\ProductCarousel.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Paginate.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\SearchBox.js",["444"],"import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                placeholder='Search'\n\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            {/* <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button> */}\n          \n        </Form>\n    )\n}\n\nexport default SearchBox\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\FormContainer.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Rating.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\screens\\Adbanner.js",["445"],"import React from 'react';\r\n\r\nconst AdBanner = () => {\r\n  return (\r\n    <div>\r\n      <h2>My Website</h2>\r\n      <iframe\r\n        src=\"https://www.youtube.com/embed/Yqw6Y1U1G64\"\r\n        width=\"728\"\r\n        height=\"90\"\r\n        frameBorder=\"0\"\r\n        scrolling=\"no\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdBanner;\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\SongCarousel.js",["446"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopSongs } from '../actions/songActions'\r\n\r\nfunction SongCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const  songTopRated = useSelector(state => state. songTopRated)\r\n    const { error, loading, songs } =  songTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopSongs())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {songs.map(song => (\r\n                        <Carousel.Item key={song._id}>\r\n                            <Link to={`/songs/${song._id}`}>\r\n                                <Image src={song.image} alt={song.title} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{song.title} - {song.name} </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default SongCarousel\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\productConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\wishConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\preorderConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\cartConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\playlistConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\songConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\chatboxConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\userConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\constants\\orderConstants.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\userActions.js",["447"],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\productActions.js",["448"],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\orderActions.js",["449","450","451"],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\songActions.js",["452"],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\playlistActions.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\wishActions.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\preorderActions.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\chatboxActions.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\Song.js",["453"],"import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\nimport './Song.css'; // import your CSS file\r\n\r\nfunction Song({ song }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded bg-light text-white\">\r\n      <Link to={`/songs/${song._id}`}>\r\n        <Card.Img src={song.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/songs/${song._id}`}>\r\n          <Card.Text as=\"h3\">\r\n            <strong>{song.name}</strong>\r\n          </Card.Text>\r\n        </Link>\r\n\r\n        {/* <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={song.rating}\r\n              text={`${song.numReviews} reviews`}\r\n              color={'#f8e825'}\r\n            />\r\n          </div>\r\n        </Card.Text> */}\r\n\r\n<Card.Text as=\"p\" style={{color: 'black'}}>\r\n  {song.title},\r\n  {song.title2}, \r\n  {song.title3}, \r\n  {song.title4},\r\n  {song.title5}\r\n</Card.Text>\r\n        {/* <audio controls className=\"music-player\">\r\n          <source src={song.music} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio> */}\r\n        {/* <audio controls className=\"music-player\">\r\n          <source src={song.music} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio> */}\r\n\r\n        {/* <Card.Text as=\"h5\" className=\"mb-3\">\r\n          {song.countInStock === 0 ? 'Out of Stock' : `Available`}\r\n        </Card.Text> */}\r\n\r\n        <Link to={`/songs/${song._id}`} className=\"btn btn-primary\">\r\n          View Details\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Song;\r\n","C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\actions\\cartActions.js",[],"C:\\Users\\franc\\Desktop\\popsiccle-deploy-frontend\\popsiccle\\src\\components\\CheckoutSteps.js",[],{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","severity":1,"message":"459","line":12,"column":15,"nodeType":"460","endLine":12,"endColumn":55},{"ruleId":"458","severity":1,"message":"459","line":15,"column":15,"nodeType":"460","endLine":15,"endColumn":55},{"ruleId":"458","severity":1,"message":"459","line":18,"column":15,"nodeType":"460","endLine":18,"endColumn":50},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"465","line":8,"column":8,"nodeType":"463","messageId":"464","endLine":8,"endColumn":23},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"466","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"461","severity":1,"message":"467","line":5,"column":8,"nodeType":"463","messageId":"464","endLine":5,"endColumn":17},{"ruleId":"461","severity":1,"message":"468","line":7,"column":18,"nodeType":"463","messageId":"464","endLine":7,"endColumn":27},{"ruleId":"461","severity":1,"message":"469","line":7,"column":29,"nodeType":"463","messageId":"464","endLine":7,"endColumn":43},{"ruleId":"461","severity":1,"message":"470","line":7,"column":53,"nodeType":"463","messageId":"464","endLine":7,"endColumn":60},{"ruleId":"461","severity":1,"message":"471","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":24},{"ruleId":"461","severity":1,"message":"472","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":18},{"ruleId":"461","severity":1,"message":"473","line":14,"column":10,"nodeType":"463","messageId":"464","endLine":14,"endColumn":28},{"ruleId":"461","severity":1,"message":"474","line":14,"column":30,"nodeType":"463","messageId":"464","endLine":14,"endColumn":49},{"ruleId":"461","severity":1,"message":"475","line":15,"column":10,"nodeType":"463","messageId":"464","endLine":15,"endColumn":37},{"ruleId":"461","severity":1,"message":"476","line":16,"column":10,"nodeType":"463","messageId":"464","endLine":16,"endColumn":20},{"ruleId":"461","severity":1,"message":"477","line":4,"column":38,"nodeType":"463","messageId":"464","endLine":4,"endColumn":42},{"ruleId":"478","severity":1,"message":"479","line":34,"column":22,"nodeType":"480","messageId":"481","endLine":34,"endColumn":24},{"ruleId":"461","severity":1,"message":"466","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"461","severity":1,"message":"477","line":4,"column":52,"nodeType":"463","messageId":"464","endLine":4,"endColumn":56},{"ruleId":"461","severity":1,"message":"482","line":4,"column":58,"nodeType":"463","messageId":"464","endLine":4,"endColumn":71},{"ruleId":"461","severity":1,"message":"483","line":5,"column":8,"nodeType":"463","messageId":"464","endLine":5,"endColumn":14},{"ruleId":"461","severity":1,"message":"474","line":8,"column":30,"nodeType":"463","messageId":"464","endLine":8,"endColumn":49},{"ruleId":"461","severity":1,"message":"484","line":10,"column":10,"nodeType":"463","messageId":"464","endLine":10,"endColumn":17},{"ruleId":"461","severity":1,"message":"485","line":11,"column":10,"nodeType":"463","messageId":"464","endLine":11,"endColumn":25},{"ruleId":"461","severity":1,"message":"486","line":12,"column":10,"nodeType":"463","messageId":"464","endLine":12,"endColumn":25},{"ruleId":"461","severity":1,"message":"487","line":12,"column":27,"nodeType":"463","messageId":"464","endLine":12,"endColumn":35},{"ruleId":"461","severity":1,"message":"488","line":12,"column":37,"nodeType":"463","messageId":"464","endLine":12,"endColumn":49},{"ruleId":"461","severity":1,"message":"489","line":13,"column":10,"nodeType":"463","messageId":"464","endLine":13,"endColumn":25},{"ruleId":"461","severity":1,"message":"490","line":13,"column":27,"nodeType":"463","messageId":"464","endLine":13,"endColumn":46},{"ruleId":"461","severity":1,"message":"491","line":14,"column":8,"nodeType":"463","messageId":"464","endLine":14,"endColumn":13},{"ruleId":"461","severity":1,"message":"492","line":18,"column":10,"nodeType":"463","messageId":"464","endLine":18,"endColumn":15},{"ruleId":"461","severity":1,"message":"493","line":19,"column":10,"nodeType":"463","messageId":"464","endLine":19,"endColumn":23},{"ruleId":"461","severity":1,"message":"494","line":24,"column":15,"nodeType":"463","messageId":"464","endLine":24,"endColumn":21},{"ruleId":"461","severity":1,"message":"495","line":25,"column":10,"nodeType":"463","messageId":"464","endLine":25,"endColumn":16},{"ruleId":"461","severity":1,"message":"496","line":26,"column":10,"nodeType":"463","messageId":"464","endLine":26,"endColumn":17},{"ruleId":"461","severity":1,"message":"497","line":27,"column":10,"nodeType":"463","messageId":"464","endLine":27,"endColumn":18},{"ruleId":"461","severity":1,"message":"498","line":27,"column":20,"nodeType":"463","messageId":"464","endLine":27,"endColumn":31},{"ruleId":"461","severity":1,"message":"499","line":28,"column":10,"nodeType":"463","messageId":"464","endLine":28,"endColumn":16},{"ruleId":"461","severity":1,"message":"500","line":28,"column":18,"nodeType":"463","messageId":"464","endLine":28,"endColumn":27},{"ruleId":"461","severity":1,"message":"501","line":29,"column":10,"nodeType":"463","messageId":"464","endLine":29,"endColumn":15},{"ruleId":"461","severity":1,"message":"502","line":29,"column":17,"nodeType":"463","messageId":"464","endLine":29,"endColumn":25},{"ruleId":"461","severity":1,"message":"503","line":30,"column":10,"nodeType":"463","messageId":"464","endLine":30,"endColumn":19},{"ruleId":"461","severity":1,"message":"504","line":30,"column":21,"nodeType":"463","messageId":"464","endLine":30,"endColumn":33},{"ruleId":"461","severity":1,"message":"505","line":32,"column":9,"nodeType":"463","messageId":"464","endLine":32,"endColumn":16},{"ruleId":"461","severity":1,"message":"506","line":36,"column":10,"nodeType":"463","messageId":"464","endLine":36,"endColumn":18},{"ruleId":"461","severity":1,"message":"507","line":36,"column":20,"nodeType":"463","messageId":"464","endLine":36,"endColumn":31},{"ruleId":"461","severity":1,"message":"508","line":42,"column":20,"nodeType":"463","messageId":"464","endLine":42,"endColumn":30},{"ruleId":"461","severity":1,"message":"509","line":42,"column":41,"nodeType":"463","messageId":"464","endLine":42,"endColumn":51},{"ruleId":"461","severity":1,"message":"510","line":45,"column":20,"nodeType":"463","messageId":"464","endLine":45,"endColumn":34},{"ruleId":"461","severity":1,"message":"511","line":45,"column":45,"nodeType":"463","messageId":"464","endLine":45,"endColumn":59},{"ruleId":"461","severity":1,"message":"512","line":52,"column":11,"nodeType":"463","messageId":"464","endLine":52,"endColumn":19},{"ruleId":"461","severity":1,"message":"513","line":57,"column":14,"nodeType":"463","messageId":"464","endLine":57,"endColumn":34},{"ruleId":"461","severity":1,"message":"514","line":58,"column":12,"nodeType":"463","messageId":"464","endLine":58,"endColumn":30},{"ruleId":"515","severity":1,"message":"516","line":77,"column":6,"nodeType":"517","endLine":77,"endColumn":16,"suggestions":"518"},{"ruleId":"461","severity":1,"message":"519","line":91,"column":11,"nodeType":"463","messageId":"464","endLine":91,"endColumn":18},{"ruleId":"461","severity":1,"message":"520","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":14},{"ruleId":"478","severity":1,"message":"479","line":55,"column":22,"nodeType":"480","messageId":"481","endLine":55,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"515","severity":1,"message":"521","line":35,"column":8,"nodeType":"517","endLine":35,"endColumn":26,"suggestions":"522"},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"466","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"523","severity":1,"message":"524","line":109,"column":17,"nodeType":"460","endLine":109,"endColumn":21},{"ruleId":"461","severity":1,"message":"525","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":16},{"ruleId":"461","severity":1,"message":"510","line":25,"column":22,"nodeType":"463","messageId":"464","endLine":25,"endColumn":36},{"ruleId":"515","severity":1,"message":"526","line":65,"column":8,"nodeType":"517","endLine":65,"endColumn":62,"suggestions":"527"},{"ruleId":"461","severity":1,"message":"528","line":72,"column":11,"nodeType":"463","messageId":"464","endLine":72,"endColumn":25},{"ruleId":"461","severity":1,"message":"529","line":77,"column":11,"nodeType":"463","messageId":"464","endLine":77,"endColumn":19},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"515","severity":1,"message":"530","line":43,"column":8,"nodeType":"517","endLine":43,"endColumn":46,"suggestions":"531"},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"532","line":5,"column":10,"nodeType":"463","messageId":"464","endLine":5,"endColumn":25},{"ruleId":"461","severity":1,"message":"533","line":7,"column":18,"nodeType":"463","messageId":"464","endLine":7,"endColumn":21},{"ruleId":"461","severity":1,"message":"534","line":7,"column":23,"nodeType":"463","messageId":"464","endLine":7,"endColumn":32},{"ruleId":"461","severity":1,"message":"535","line":7,"column":34,"nodeType":"463","messageId":"464","endLine":7,"endColumn":45},{"ruleId":"461","severity":1,"message":"536","line":44,"column":10,"nodeType":"463","messageId":"464","endLine":44,"endColumn":15},{"ruleId":"461","severity":1,"message":"537","line":44,"column":17,"nodeType":"463","messageId":"464","endLine":44,"endColumn":25},{"ruleId":"461","severity":1,"message":"538","line":53,"column":11,"nodeType":"463","messageId":"464","endLine":53,"endColumn":24},{"ruleId":"461","severity":1,"message":"539","line":61,"column":9,"nodeType":"463","messageId":"464","endLine":61,"endColumn":34},{"ruleId":"461","severity":1,"message":"540","line":66,"column":11,"nodeType":"463","messageId":"464","endLine":66,"endColumn":15},{"ruleId":"461","severity":1,"message":"466","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"461","severity":1,"message":"473","line":8,"column":10,"nodeType":"463","messageId":"464","endLine":8,"endColumn":28},{"ruleId":"461","severity":1,"message":"475","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":37},{"ruleId":"461","severity":1,"message":"485","line":10,"column":10,"nodeType":"463","messageId":"464","endLine":10,"endColumn":25},{"ruleId":"461","severity":1,"message":"494","line":16,"column":15,"nodeType":"463","messageId":"464","endLine":16,"endColumn":21},{"ruleId":"478","severity":1,"message":"541","line":152,"column":84,"nodeType":"480","messageId":"481","endLine":152,"endColumn":86},{"ruleId":"461","severity":1,"message":"477","line":4,"column":52,"nodeType":"463","messageId":"464","endLine":4,"endColumn":56},{"ruleId":"461","severity":1,"message":"483","line":5,"column":8,"nodeType":"463","messageId":"464","endLine":5,"endColumn":14},{"ruleId":"461","severity":1,"message":"486","line":11,"column":10,"nodeType":"463","messageId":"464","endLine":11,"endColumn":25},{"ruleId":"461","severity":1,"message":"487","line":11,"column":27,"nodeType":"463","messageId":"464","endLine":11,"endColumn":35},{"ruleId":"461","severity":1,"message":"488","line":11,"column":37,"nodeType":"463","messageId":"464","endLine":11,"endColumn":49},{"ruleId":"461","severity":1,"message":"489","line":12,"column":10,"nodeType":"463","messageId":"464","endLine":12,"endColumn":25},{"ruleId":"461","severity":1,"message":"490","line":12,"column":27,"nodeType":"463","messageId":"464","endLine":12,"endColumn":46},{"ruleId":"461","severity":1,"message":"542","line":13,"column":26,"nodeType":"463","messageId":"464","endLine":13,"endColumn":43},{"ruleId":"461","severity":1,"message":"543","line":17,"column":10,"nodeType":"463","messageId":"464","endLine":17,"endColumn":24},{"ruleId":"461","severity":1,"message":"544","line":17,"column":26,"nodeType":"463","messageId":"464","endLine":17,"endColumn":40},{"ruleId":"461","severity":1,"message":"545","line":17,"column":42,"nodeType":"463","messageId":"464","endLine":17,"endColumn":55},{"ruleId":"461","severity":1,"message":"494","line":27,"column":15,"nodeType":"463","messageId":"464","endLine":27,"endColumn":21},{"ruleId":"461","severity":1,"message":"546","line":40,"column":9,"nodeType":"463","messageId":"464","endLine":40,"endColumn":25},{"ruleId":"461","severity":1,"message":"547","line":50,"column":9,"nodeType":"463","messageId":"464","endLine":50,"endColumn":22},{"ruleId":"461","severity":1,"message":"548","line":76,"column":9,"nodeType":"463","messageId":"464","endLine":76,"endColumn":25},{"ruleId":"461","severity":1,"message":"549","line":77,"column":9,"nodeType":"463","messageId":"464","endLine":77,"endColumn":25},{"ruleId":"461","severity":1,"message":"550","line":78,"column":9,"nodeType":"463","messageId":"464","endLine":78,"endColumn":25},{"ruleId":"461","severity":1,"message":"551","line":79,"column":9,"nodeType":"463","messageId":"464","endLine":79,"endColumn":25},{"ruleId":"461","severity":1,"message":"552","line":80,"column":9,"nodeType":"463","messageId":"464","endLine":80,"endColumn":26},{"ruleId":"461","severity":1,"message":"553","line":82,"column":10,"nodeType":"463","messageId":"464","endLine":82,"endColumn":22},{"ruleId":"461","severity":1,"message":"554","line":82,"column":24,"nodeType":"463","messageId":"464","endLine":82,"endColumn":39},{"ruleId":"461","severity":1,"message":"555","line":83,"column":7,"nodeType":"463","messageId":"464","endLine":83,"endColumn":20},{"ruleId":"461","severity":1,"message":"556","line":83,"column":22,"nodeType":"463","messageId":"464","endLine":83,"endColumn":35},{"ruleId":"461","severity":1,"message":"557","line":103,"column":23,"nodeType":"463","messageId":"464","endLine":103,"endColumn":37},{"ruleId":"461","severity":1,"message":"558","line":106,"column":10,"nodeType":"463","messageId":"464","endLine":106,"endColumn":14},{"ruleId":"461","severity":1,"message":"559","line":107,"column":12,"nodeType":"463","messageId":"464","endLine":107,"endColumn":17},{"ruleId":"461","severity":1,"message":"560","line":108,"column":12,"nodeType":"463","messageId":"464","endLine":108,"endColumn":20},{"ruleId":"461","severity":1,"message":"561","line":108,"column":22,"nodeType":"463","messageId":"464","endLine":108,"endColumn":33},{"ruleId":"461","severity":1,"message":"562","line":109,"column":12,"nodeType":"463","messageId":"464","endLine":109,"endColumn":27},{"ruleId":"461","severity":1,"message":"563","line":109,"column":29,"nodeType":"463","messageId":"464","endLine":109,"endColumn":47},{"ruleId":"461","severity":1,"message":"564","line":110,"column":12,"nodeType":"463","messageId":"464","endLine":110,"endColumn":19},{"ruleId":"461","severity":1,"message":"565","line":110,"column":21,"nodeType":"463","messageId":"464","endLine":110,"endColumn":31},{"ruleId":"461","severity":1,"message":"566","line":126,"column":12,"nodeType":"463","messageId":"464","endLine":126,"endColumn":24},{"ruleId":"461","severity":1,"message":"567","line":126,"column":26,"nodeType":"463","messageId":"464","endLine":126,"endColumn":41},{"ruleId":"461","severity":1,"message":"462","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"568","line":5,"column":27,"nodeType":"463","messageId":"464","endLine":5,"endColumn":36},{"ruleId":"461","severity":1,"message":"569","line":5,"column":46,"nodeType":"463","messageId":"464","endLine":5,"endColumn":50},{"ruleId":"461","severity":1,"message":"477","line":5,"column":52,"nodeType":"463","messageId":"464","endLine":5,"endColumn":56},{"ruleId":"461","severity":1,"message":"483","line":6,"column":8,"nodeType":"463","messageId":"464","endLine":6,"endColumn":14},{"ruleId":"461","severity":1,"message":"570","line":7,"column":8,"nodeType":"463","messageId":"464","endLine":7,"endColumn":14},{"ruleId":"461","severity":1,"message":"571","line":8,"column":8,"nodeType":"463","messageId":"464","endLine":8,"endColumn":15},{"ruleId":"461","severity":1,"message":"532","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":25},{"ruleId":"461","severity":1,"message":"572","line":9,"column":27,"nodeType":"463","messageId":"464","endLine":9,"endColumn":43},{"ruleId":"461","severity":1,"message":"573","line":10,"column":10,"nodeType":"463","messageId":"464","endLine":10,"endColumn":34},{"ruleId":"461","severity":1,"message":"574","line":31,"column":11,"nodeType":"463","messageId":"464","endLine":31,"endColumn":18},{"ruleId":"461","severity":1,"message":"575","line":31,"column":20,"nodeType":"463","messageId":"464","endLine":31,"endColumn":25},{"ruleId":"461","severity":1,"message":"540","line":31,"column":27,"nodeType":"463","messageId":"464","endLine":31,"endColumn":31},{"ruleId":"461","severity":1,"message":"512","line":34,"column":11,"nodeType":"463","messageId":"464","endLine":34,"endColumn":19},{"ruleId":"523","severity":1,"message":"524","line":58,"column":17,"nodeType":"460","endLine":58,"endColumn":21},{"ruleId":"461","severity":1,"message":"483","line":3,"column":8,"nodeType":"463","messageId":"464","endLine":3,"endColumn":14},{"ruleId":"461","severity":1,"message":"525","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":16},{"ruleId":"576","severity":1,"message":"577","line":7,"column":7,"nodeType":"460","endLine":13,"endColumn":8},{"ruleId":"578","severity":1,"message":"579","line":12,"column":48,"nodeType":"580","messageId":"581","endLine":12,"endColumn":67,"fix":"582"},{"ruleId":"461","severity":1,"message":"583","line":21,"column":5,"nodeType":"463","messageId":"464","endLine":21,"endColumn":30},{"ruleId":"461","severity":1,"message":"584","line":117,"column":17,"nodeType":"463","messageId":"464","endLine":117,"endColumn":21},{"ruleId":"461","severity":1,"message":"489","line":14,"column":5,"nodeType":"463","messageId":"464","endLine":14,"endColumn":20},{"ruleId":"461","severity":1,"message":"585","line":19,"column":5,"nodeType":"463","messageId":"464","endLine":19,"endColumn":24},{"ruleId":"461","severity":1,"message":"490","line":28,"column":5,"nodeType":"463","messageId":"464","endLine":28,"endColumn":24},{"ruleId":"461","severity":1,"message":"584","line":117,"column":17,"nodeType":"463","messageId":"464","endLine":117,"endColumn":21},{"ruleId":"461","severity":1,"message":"483","line":3,"column":8,"nodeType":"463","messageId":"464","endLine":3,"endColumn":14},"no-native-reassign",["586"],"no-negated-in-lhs",["587"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ProductCarousel' is defined but never used.","'useEffect' is defined but never used.","'SearchBox' is defined but never used.","'FaGamepad' is defined but never used.","'FaShoppingCart' is defined but never used.","'FaHeart' is defined but never used.","'GiSwordsEmblem' is defined but never used.","'SiTwitch' is defined but never used.","'listProductDetails' is defined but never used.","'createProductReview' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'FaComments' is defined but never used.","'Form' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ListGroupItem' is defined but never used.","'Rating' is defined but never used.","'faHeart' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'getOrderDetails' is defined but never used.","'payOrder' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'axios' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'setQty' is assigned a value but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'wishlist' is assigned a value but never used.","'setWishlist' is assigned a value but never used.","'bought' is assigned a value but never used.","'setBought' is assigned a value but never used.","'owned' is assigned a value but never used.","'setOwned' is assigned a value but never used.","'boughtQty' is assigned a value but never used.","'setBoughtQty' is assigned a value but never used.","'orderId' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'successPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'loadingProductReview' is assigned a value but never used.","'errorProductReview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["588"],"'success' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["589"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["590"],"'deliverHandler' is assigned a value but never used.","'download' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["591"],"'listSongDetails' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'NavDropdown' is defined but never used.","'liked' is assigned a value but never used.","'setLiked' is assigned a value but never used.","'preorderItems' is assigned a value but never used.","'removeFromPreorderHandler' is assigned a value but never used.","'song' is assigned a value but never used.","Expected '===' and instead saw '=='.","'updateUserProfile' is defined but never used.","'createPlaylist' is defined but never used.","'deletePlaylist' is defined but never used.","'listPlaylists' is defined but never used.","'addToCartHandler' is assigned a value but never used.","'addToPreorder' is assigned a value but never used.","'audioElement6Ref' is assigned a value but never used.","'audioElement7Ref' is assigned a value but never used.","'audioElement8Ref' is assigned a value but never used.","'audioElement9Ref' is assigned a value but never used.","'audioElement10Ref' is assigned a value but never used.","'currentAudio' is assigned a value but never used.","'setCurrentAudio' is assigned a value but never used.","'audioElement1' is defined but never used.","'audioElement2' is defined but never used.","'setShowPremium' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'showDownload' is assigned a value but never used.","'setShowDownload' is assigned a value but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'createSongReview' is defined but never used.","'SONG_CREATE_REVIEW_RESET' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-whitespace-before-property","Unexpected whitespace before property songTopRated.","MemberExpression","unexpectedWhitespace",{"range":"592","text":"593"},"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'data' is assigned a value but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},[428,430],".","Update the dependencies array to be: [dispatch, order]",{"range":"602","text":"603"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"604","text":"605"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"606","text":"607"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"608","text":"609"},[3059,3069],"[dispatch, order]",[1239,1257],"[success, history, order._id, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1432,1470],"[user, userId, successUpdate, history, dispatch]"]